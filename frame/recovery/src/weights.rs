
//! Autogenerated weights for `pallet_recovery`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-14, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/substrate
// benchmark
// pallet
// --pallet
// pallet-recovery
// --chain
// dev
// --steps
// 50
// --repeat
// 20
// --extrinsic
// *
// --execution
// wasm
// --wasm-execution
// compiled
// --heap-pages
// 4096
// --output
// ./frame/recovery/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_recovery`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_recovery::WeightInfo for WeightInfo<T> {
	// Storage: Recovery Proxy (r:1 w:0)
	fn as_recovered() -> Weight {
		(5_766_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Recovery Proxy (r:0 w:1)
	fn set_recovered() -> Weight {
		(16_747_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Recovery Recoverable (r:1 w:1)
	fn create_recovery(_n: u32, ) -> Weight {
		(44_898_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Recovery Recoverable (r:1 w:0)
	// Storage: Recovery ActiveRecoveries (r:1 w:1)
	fn initiate_recovery() -> Weight {
		(43_947_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Recovery Recoverable (r:1 w:0)
	// Storage: Recovery ActiveRecoveries (r:1 w:1)
	fn vouch_recovery(n: u32, ) -> Weight {
		(27_486_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((345_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Recovery Recoverable (r:1 w:0)
	// Storage: Recovery ActiveRecoveries (r:1 w:0)
	// Storage: Recovery Proxy (r:1 w:1)
	fn claim_recovery(n: u32, ) -> Weight {
		(38_336_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((277_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Recovery ActiveRecoveries (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn close_recovery(n: u32, ) -> Weight {
		(44_103_000 as Weight)
			// Standard Error: 21_000
			.saturating_add((262_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Recovery ActiveRecoveries (r:1 w:0)
	// Storage: Recovery Recoverable (r:1 w:1)
	fn remove_recovery(n: u32, ) -> Weight {
		(42_129_000 as Weight)
			// Standard Error: 27_000
			.saturating_add((260_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Recovery Proxy (r:1 w:1)
	fn cancel_recovered() -> Weight {
		(14_186_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
